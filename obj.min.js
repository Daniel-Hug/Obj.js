// obj.js | Unobtrusive object subscribe
// https://github.com/Daniel-Hug/object-subscribe

(function(f,d){"function"===typeof define&&define.amd?define([],d):"object"===typeof exports?module.exports=d():f.Obj=d()})(this,function(){function f(b){for(var a=0,c=d.length;a<c;a++)if(d[a][0]===b)return a;return-1}var d=[],g={};return{has:function(b,a){return g.hasOwnProperty.call(b,a)},keys:Object.keys||function(b){var a=[],c;for(c in b)Obj.has(b,c)&&a.push(c);return a},type:function(b){return g.toString.call(b).slice(8,-1).toLowerCase()},extend:function(b,a){if("object"===typeof b)if("array"===Obj.type(b)){a=a||[];for(var c=0,d=b.length;c<d;c++)a.push(Obj.extend(b[c]))}else for(c in a=a||{},b)Obj.has(b,c)&&(a[c]=Obj.extend(b[c]));else return b;return a},subscribe:function(b,a,c){var e=f(b);0<=e?d[e][1].push(a):d.push([b,[a]]);c&&a(b)},unsubscribe:function(b,a){var c=f(b),e;if(0<=c)if(a){if((c=d[c][1])&&c.length)for(e=a.length;e--;)c.splice(c.indexOf(a[e]),1)}else d.splice(c,1)},set:function(b,a){for(var c in a)Obj.has(a,c)&&(b[c]=a[c]);Obj.changed(b)},unset:function(b,a){for(var c=a.length;c--;)delete b[a[c]];Obj.changed(b)},reset:function(b,a){for(var c in b)Obj.has(b,c)&&delete b[c];Obj.set(b,a)},changed:function(b){var a=f(b);if(0<=a)for(var c=d[a][1],e=c.length,a=0;a<e;a++)c[a](b)}}});
