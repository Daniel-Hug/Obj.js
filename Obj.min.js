// Obj.js | Unobtrusive object subscription & manipulation
// https://github.com/Daniel-Hug/Obj.js

(function(f,d){"function"===typeof define&&define.amd?define([],d):"object"===typeof exports?module.exports=d():f.returnExports=d()})(this,function(){function f(b){for(var a=0,c=d.length;a<c;a++)if(d[a][0]===b)return a;return-1}var d=[];return{has:function(b,a){return{}.hasOwnProperty.call(b,a)},keys:Object.keys||function(b){var a=[],c;for(c in b)Obj.has(b,c)&&a.push(c);return a},subscribe:function(b,a,c){var e=f(b);0<=e?d[e][1].push(a):d.push([b,[a]]);c&&a(b)},unsubscribe:function(b,a){var c;if(0<=f(b))if(a){if((c=d[f(b)][1])&&c.length)for(var e=a.length;e--;)c.splice(c.indexOf(a[e]),1)}else d.splice(f(b),1)},set:function(b,a){for(var c in a)Obj.has(a,c)&&(b[c]=a[c]);Obj.changed(b)},unset:function(b,a){for(var c=a.length;c--;)delete b[a[c]];Obj.changed(b)},reset:function(b,a){for(var c in b)Obj.has(b,c)&&delete b[c];Obj.set(b,a)},changed:function(b){var a=f(b);if(0<=a)for(var a=d[a][1],c=a.length,e=0;e<c;e++)a[e](b)}}});
